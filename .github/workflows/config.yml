name: Check coverage

on:
  #  push:
  #    branches: [ main,test ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: Cache gem dependencies
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/*Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Install gem
        run: |
          gem install bundle
          bundle config path vendor/bundle
          bundle install
          bundle update danger

      - name: Cache gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ env.GRADLE_VERSION }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ env.GRADLE_VERSION }}-

      - name: Run Gradle to cache
        if: startsWith(github.ref, env.DEFAULT_BRANCH) == true
        run: ./gradlew clean

      - name: Report github
        run: bundle exec danger --danger_id=check_style --dangerfile=Dangerfile
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
